# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- main

parameters:
  - name: InstanceBranch
    displayName: 'Test Instance Branch'
    default: develop
    values:
      - develop
      - master
      - release
  - name: 'TestApiRegression'
    displayName: 'API: Regression Tests'
    type: boolean
    default: false
  - name: 'TestUIRegression'
    displayName: 'UI Regression Tests'
    type: boolean
    default: false

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1
  displayName: 'Install NuGet 5.8.0'
  inputs:
    versionSpec: 5.8.0

- task: NuGetCommand@2
  displayName: 'Restore NuGets'
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

# - task: VSTest@2
#   displayName: 'UI: Regression API Tests2'
#   condition: eq(${{ parameters.TestApiRegression }}, 'true')
#   inputs:
#     platform: '$(buildPlatform)'
#     configuration: '$(buildConfiguration)'
#     testAssemblyVer2: "$(Build.Repository.LocalPath)/RegressionApiTests/bin/Release/netcoreapp3.1/RegressionApiTests.dll"
#     uiTests: false
#     runSettingsFile: "$(Build.Repository.LocalPath)/TestConfigurator/RunSettings/InstanceSettings.runsettings"
#     testRunTitle: 'API: Regression'
#     runTestsInIsolation: true
#     rerunFailedTests: true
#     rerunMaxAttempts: 2
#   continueOnError: true

# - task: VSTest@2
#   displayName: 'UI: Regression E2E Tests2'
#   condition: eq(${{ parameters.TestUIRegression }}, 'true')
#   inputs:
#     testAssemblyVer2: '$(Build.Repository.LocalPath)/RegressionUiTests/bin/Release/netcoreapp3.1/RegressionUiTests.dll'
#     uiTests: true
#     runSettingsFile: '$(Build.Repository.LocalPath)/TestConfigurator/RunSettings/InstanceSettings.runsettings'
#     runTestsInIsolation: true
#     testRunTitle: 'UI: Regr'
#     rerunFailedTests: true
#     rerunMaxAttempts: 1
#     runInParallel: true
#   continueOnError: true

#
#
#
# - task: DotNetCoreCLI@2
#   displayName: 'Run API Tests'
#   inputs:
#     command: 'test'
#     publishTestResults: 
#     projects: '$(Build.Repository.LocalPath)/RegressionApiTests/bin/Release/netcoreapp3.1/RegressionApiTests.dll'
#     arguments: '--logger trx --logger junit --results-directory $(Build.Repository.LocalPath)\API --settings $(Build.Repository.LocalPath)/TestConfigurator/RunSettings/InstanceSettings.runsettings'
#     testRunTitle: 'API: Regression API Tests'

# - task: DotNetCoreCLI@2
#   displayName: 'Run UI Tests'
#   inputs:
#     command: 'test'
#     projects: '$(Build.Repository.LocalPath)/RegressionUiTests/bin/Release/netcoreapp3.1/RegressionUiTests.dll'
#     arguments: '--logger trx --logger junit --results-directory $(Build.Repository.LocalPath)\UI --settings $(Build.Repository.LocalPath)/TestConfigurator/RunSettings/InstanceSettings.runsettings'
#     testRunTitle: 'UI: Regression API Tests'

#
#
#
- task: PowerShell@2
  displayName: 'Update tests .runsettings'
  inputs:
    targetType: 'inline'
    script: |
      $filePathToTask = "$(Build.Repository.LocalPath)/TestConfigurator/RunSettings/InstanceSettings.runsettings"
      $xml = New-Object XML
      $xml.Load($filePathToTask)
      $xml.SelectSingleNode("//Parameter[@name='BuildId']").value="$(Build.BuildNumber)"
      $xml.SelectSingleNode("//Parameter[@name='Branch']").value="${{ parameters.InstanceBranch }}"
      $xml.SelectSingleNode("//Parameter[@name='ZephyrToken']").value="$(ZephyrToken)"
      $xml.Save($filePathToTask)
      ${$filePathToTask}

# - task: DotNetCoreCLI@2
#   displayName: 'Run API Tests'
#   inputs:
#     command: 'test'
#     projects: '$(Build.Repository.LocalPath)/RegressionApiTests/bin/Release/netcoreapp3.1/RegressionApiTests.dll'
#     arguments: '--logger trx --logger junit --settings $(Build.Repository.LocalPath)/TestConfigurator/RunSettings/InstanceSettings.runsettings --results-directory ./API'
#     testRunTitle: 'API: Regression API Tests'
#   continueOnError: true
- task: VSTest@2
  displayName: 'API: Regression API Tests2'
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    testAssemblyVer2: "$(Build.Repository.LocalPath)/RegressionApiTests/bin/Release/netcoreapp3.1/RegressionApiTests.dll"
    uiTests: false
    runSettingsFile: "$(Build.Repository.LocalPath)/TestConfigurator/RunSettings/InstanceSettings.runsettings"
    otherConsoleOptions: '/Logger:trx /Logger:junit'
    testRunTitle: 'API: Regression'
    runTestsInIsolation: true
    rerunFailedTests: true
    rerunMaxAttempts: 1
    resultsFolder: '$(Agent.TempDirectory)\TestResults\API'
  continueOnError: true

# - task: CmdLine@2
#   displayName: 'Renaming API XML Test Results'
#   inputs:
#     script: 'move D:\a\_temp\TestResults.xml D:\a\_temp\TestResults_API.xml'

# - task: DotNetCoreCLI@2
#   displayName: 'Run UI Tests'
#   inputs:
#     command: 'test'
#     projects: '$(Build.Repository.LocalPath)/RegressionUiTests/bin/Release/netcoreapp3.1/RegressionUiTests.dll'
#     arguments: '--logger trx --logger junit'
#     testRunTitle: 'UI: Regression UI Tests'
#   continueOnError: true

- task: VSTest@2
  displayName: 'UI: Regression E2E Tests'
  inputs:
    testAssemblyVer2: '$(Build.Repository.LocalPath)/RegressionUiTests/bin/Release/netcoreapp3.1/RegressionUiTests.dll'
    uiTests: true
    runSettingsFile: '$(Build.Repository.LocalPath)/TestConfigurator/RunSettings/InstanceSettings.runsettings'
    otherConsoleOptions: '/Logger:trx /Logger:junit'
    runTestsInIsolation: true
    testRunTitle: 'UI: Regression E2E Tests'
    resultsFolder: '$(Agent.TempDirectory)\TestResults\UI'
  continueOnError: true

# - task: CmdLine@2
#   displayName: 'Renaming UI XML Test Results'
#   inputs:
#     script: 'move D:\a\_temp\TestResults.xml D:\a\_temp\TestResults_UI.xml'

- task: CmdLine@2
  displayName: 'Print out results'
  inputs:
    script: 'dir $(Agent.TempDirectory)\TestResults'

- task: PowerShell@2
  displayName: 'Create ZIP for Jira Zephyr'
  inputs:
    targetType: 'inline'
    script: 'powershell Compress-Archive $(Agent.TempDirectory)\TestResults\*\*.xml $(Agent.TempDirectory)\TestResults\JiraResults.zip'
    
- task: CmdLine@2
  displayName: 'Print out results'
  inputs:
    script: 'dir $(Agent.TempDirectory)\TestResults'

- task: CmdLine@2
  displayName: 'Publish results to Jira Zephyr'
  inputs:
   script: 'curl -H "Authorization: $(ZephyrToken)" -F "file=@$(Agent.TempDirectory)\TestResults\JiraResults.zip;type=multipart/form-data" -F "testCycle=@$(Agent.TempDirectory)\TestResults\jiraTestCycle.json;type=application/json" https://api.zephyrscale.smartbear.com/v2/automations/executions/junit?projectKey="TES"'