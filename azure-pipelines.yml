# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- main

parameters:
  - name: InstanceBranch
    displayName: 'Test Instance Branch'
    default: develop
    values:
      - develop
      - master
      - release
  - name: 'TestApiRegression'
    displayName: 'API: Regression Tests'
    type: boolean
    default: true
  - name: 'TestUIRegression'
    displayName: 'UI Regression Tests'
    type: boolean
    default: true
  - name: 'PublishToZephyr'
    displayName: '-Publish Test Run to Zephyr Scale-'
    type: boolean
    default: false
    values:
      - true
      - false
  - name: 'NuKeeper'
    displayName: '-Run NuKeeper-'
    type: boolean
    default: false
    values:
      - true
      - false

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

stages:
- stage: RunTests
  displayName: Run Regression Tests
  jobs:
  - job: BuildAndRun

    steps:
    - task: NuGetToolInstaller@1
      displayName: 'Install NuGet 5.8.0'
      inputs:
        versionSpec: 5.8.0

    - task: NuGetCommand@2
      displayName: 'Restore NuGets'
      inputs:
        restoreSolution: '$(solution)'

    - task: VSBuild@1
      displayName: 'Build Solution'
      inputs:
        solution: '$(solution)'
        msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

    - task: PowerShell@2
      displayName: 'Update tests .runsettings'
      inputs:
        targetType: 'inline'
        script: |
          $filePathToTask = "$(Build.Repository.LocalPath)/TestConfigurator/RunSettings/InstanceSettings.runsettings"
          $xml = New-Object XML
          $xml.Load($filePathToTask)
          $xml.SelectSingleNode("//Parameter[@name='PublishToZephyr']").value="${{ parameters.PublishToZephyr }}"
          $xml.SelectSingleNode("//Parameter[@name='BuildId']").value="$(Build.BuildNumber)"
          $xml.SelectSingleNode("//Parameter[@name='Branch']").value="${{ parameters.InstanceBranch }}"
          $xml.SelectSingleNode("//Parameter[@name='ZephyrToken']").value="$(ZephyrToken)"
          $xml.Save($filePathToTask)
          ${$filePathToTask}

    - task: VSTest@2
      displayName: 'Tests: Regression API'
      condition: eq(${{ parameters.TestApiRegression }}, 'true')
      inputs:
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'
        testAssemblyVer2: "$(Build.Repository.LocalPath)/RegressionApiTests/bin/Release/netcoreapp3.1/RegressionApiTests.dll"
        uiTests: false
        runSettingsFile: "$(Build.Repository.LocalPath)/TestConfigurator/RunSettings/InstanceSettings.runsettings"
        otherConsoleOptions: '/Logger:trx /Logger:junit'
        testRunTitle: 'API: Regression'
        runTestsInIsolation: true
        rerunFailedTests: true
        rerunMaxAttempts: 1
        resultsFolder: '$(Agent.TempDirectory)\TestResults\API'
      continueOnError: true

    - task: VSTest@2
      displayName: 'Tests: Regression UI'
      condition: eq(${{ parameters.TestUIRegression }}, 'true')
      inputs:
        testAssemblyVer2: '$(Build.Repository.LocalPath)/RegressionUiTests/bin/Release/netcoreapp3.1/RegressionUiTests.dll'
        uiTests: true
        runSettingsFile: '$(Build.Repository.LocalPath)/TestConfigurator/RunSettings/InstanceSettings.runsettings'
        otherConsoleOptions: '/Logger:trx /Logger:junit'
        runTestsInIsolation: true
        testRunTitle: 'UI: Regression E2E Tests'
        resultsFolder: '$(Agent.TempDirectory)\TestResults\UI'
      continueOnError: true

    - task: PowerShell@2
      condition: eq(${{ parameters.PublishToZephyr }}, 'true')
      displayName: 'Create ZIP for Jira Zephyr'
      inputs:
        targetType: 'inline'
        script: 'powershell Compress-Archive $(Agent.TempDirectory)\TestResults\*\*.xml $(Agent.TempDirectory)\TestResults\JiraResults.zip'

    - task: CmdLine@2
      condition: eq(${{ parameters.PublishToZephyr }}, 'true')
      displayName: 'Publish results to Jira Zephyr'
      inputs:
        script: 'curl -H "Authorization: $(ZephyrToken)" -F "file=@$(Agent.TempDirectory)\TestResults\JiraResults.zip;type=multipart/form-data" -F "testCycle=@$(Agent.TempDirectory)\TestResults\jiraTestCycle.json;type=application/json" https://api.zephyrscale.smartbear.com/v2/automations/executions/junit?projectKey="TES"'
  

- ${{ if eq(parameters.NuKeeper, 'true') }}:
  #- template: /ymlext/nukeeper.yml
  - stage: Nukeeper
    displayName: Run Nugets Update
    jobs:
    - job: BuildAndRun
      steps:
      - task: NuGetToolInstaller@1

      - task: NuGetCommand@2
        inputs:
        restoreSolution: '$(solution)'
      - task: NuGetAuthenticate@0
      - task: CmdLine@2
        displayName: 'Restore Nugets'
        inputs:
          script: 'dotnet restore $(Build.Repository.LocalPath)/RegressionApiTests/RegressionApiTests.csproj -p:RestoreUseSkipNonexistentTargets=false -nowarn:msb3202,nu1503'
      - task: UseDotNet@2
        displayName: 'Install SDK 2.x'
        inputs:
        packageType: 'sdk'
        version: '2.x' 
      - task: UseDotNet@2
        displayName: 'Install SDK 3.x'
        inputs:
          packageType: 'sdk'
          version: '3.x'
      - task: NuKeeper@0
        inputs:
          arguments: '--change Minor --verbosity Detailed'
          version: '0.*'