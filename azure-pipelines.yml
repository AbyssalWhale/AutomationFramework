# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- main

parameters:
  - name: InstanceBranch
    displayName: 'Test Instance Branch'
    default: develop
    values:
      - develop
      - master
      - release
  - name: 'TestApiRegression'
    displayName: 'API: Regression Tests'
    type: boolean
    default: false
  - name: 'TestUIRegression'
    displayName: 'UI Regression Tests'
    type: boolean
    default: false
  - name: 'PublishToZephyr'
    displayName: 'Publish Test Run to Zephyr Scale'
    type: boolean
    default: false
    values:
      - true
      - false

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

stages:
- stage: TestPreparation
  displayName: 'Prepare Tests Solution'
  jobs:
    - job: Nugets
      displayName: 'Prepare Nugets and Build'
      steps:
        - task: NuGetToolInstaller@1
          displayName: 'Install NuGet 5.8.0'
          inputs:
            versionSpec: 5.8.0
        - task: NuGetCommand@2
          displayName: 'Restore NuGets'
          inputs:
            restoreSolution: '$(solution)'
    - job: Build
      displayName: 'Prepare Nugets and Build'
        steps:
          - task: VSBuild@1
            displayName: 'Build Test Solution'
            inputs:
              solution: '$(solution)'
              msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
              platform: '$(buildPlatform)'
              configuration: '$(buildConfiguration)'
    - job: Runsettings
      displayName: 'Update .runsettings'
        steps:
          - task: PowerShell@2
          displayName: 'Update tests .runsettings'
          inputs:
            targetType: 'inline'
            script: |
              $filePathToTask = "$(Build.Repository.LocalPath)/TestConfigurator/RunSettings/InstanceSettings.runsettings"
              $xml = New-Object XML
              $xml.Load($filePathToTask)
              $xml.SelectSingleNode("//Parameter[@name='PublishToZephyr']").value="${{ parameters.PublishToZephyr }}"
              $xml.SelectSingleNode("//Parameter[@name='BuildId']").value="$(Build.BuildNumber)"
              $xml.SelectSingleNode("//Parameter[@name='Branch']").value="${{ parameters.InstanceBranch }}"
              $xml.SelectSingleNode("//Parameter[@name='ZephyrToken']").value="$(ZephyrToken)"
              $xml.Save($filePathToTask)
              ${$filePathToTask}

- stage: RunTests
  displayName: 'Run Regression Tests'
  jobs:
    - job: API
      displayName: 'API'
      steps:
      - task: VSTest@2
        displayName: 'Tests: Regression API'
        condition: eq(${{ parameters.TestApiRegression }}, 'true')
        inputs:
          platform: '$(buildPlatform)'
          configuration: '$(buildConfiguration)'
          testAssemblyVer2: "$(Build.Repository.LocalPath)/RegressionApiTests/bin/Release/netcoreapp3.1/RegressionApiTests.dll"
          uiTests: false
          runSettingsFile: "$(Build.Repository.LocalPath)/TestConfigurator/RunSettings/InstanceSettings.runsettings"
          otherConsoleOptions: '/Logger:trx /Logger:junit'
          testRunTitle: 'API: Regression'
          runTestsInIsolation: true
          rerunFailedTests: true
          rerunMaxAttempts: 1
          resultsFolder: '$(Agent.TempDirectory)\TestResults\API'
        continueOnError: true
    - job: UI
      displayName: 'UI'
      steps:
      - task: VSTest@2
        displayName: 'Tests: Regression UI'
        condition: eq(${{ parameters.TestUIRegression }}, 'true')
        inputs:
          testAssemblyVer2: '$(Build.Repository.LocalPath)/RegressionUiTests/bin/Release/netcoreapp3.1/RegressionUiTests.dll'
          uiTests: true
          runSettingsFile: '$(Build.Repository.LocalPath)/TestConfigurator/RunSettings/InstanceSettings.runsettings'
          otherConsoleOptions: '/Logger:trx /Logger:junit'
          runTestsInIsolation: true
          testRunTitle: 'UI: Regression E2E Tests'
          resultsFolder: '$(Agent.TempDirectory)\TestResults\UI'
        continueOnError: true

- stage: ZephyrScale
  displayName: 'Publish to Zephyr Scale'
  condition: eq(${{ parameters.PublishToZephyr }}, 'true')
  jobs:
    - job: Prepare
      displayName: 'Prepare test results for publishing'
      steps:
      - task: PowerShell@2
        condition: eq(${{ parameters.PublishToZephyr }}, 'true')
        displayName: 'Create ZIP for Jira Zephyr'
        inputs:
          targetType: 'inline'
          script: 'powershell Compress-Archive $(Agent.TempDirectory)\TestResults\*\*.xml $(Agent.TempDirectory)\TestResults\JiraResults.zip'
      - task: CmdLine@2
        displayName: 'Print out results'
        inputs:
          script: 'dir $(Agent.TempDirectory)\TestResults'
    - job: Prepare
      displayName: 'Prepare test results for publishing'
      steps:
      - task: CmdLine@2
        condition: eq(${{ parameters.PublishToZephyr }}, 'true')
        displayName: 'Publish results to Jira Zephyr'
        inputs:
          script: 'curl -H "Authorization: $(ZephyrToken)" -F "file=@$(Agent.TempDirectory)\TestResults\JiraResults.zip;type=multipart/form-data" -F "testCycle=@$(Agent.TempDirectory)\TestResults\jiraTestCycle.json;type=application/json" https://api.zephyrscale.smartbear.com/v2/automations/executions/junit?projectKey="TES"'